2022-08-12T09:37:39.085Z pw:protocol SEND ► {"id":1,"method":"Browser.getVersion"}
2022-08-12T09:37:39.096Z pw:protocol ◀ RECV {"id":1,"result":{"protocolVersion":"1.3","product":"Chrome/104.0.5112.81","revision":"@3abec05b5541eeced3d11b0135c1082567bfb96b","userAgent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.81 Electron/20.0.2 Safari/537.36","jsVersion":"10.4.132.20"}}
2022-08-12T09:37:39.098Z pw:protocol SEND ► {"id":2,"method":"Target.setAutoAttach","params":{"autoAttach":true,"waitForDebuggerOnStart":true,"flatten":true}}
2022-08-12T09:37:39.099Z pw:protocol ◀ RECV {"method":"Target.attachedToTarget","params":{"sessionId":"DC849781DCC3B5B4BA221303141538D1","targetInfo":{"targetId":"640C8BA9D94C3EFD1211FEEC537D5DD7","type":"page","title":"","url":"http://example.com/","attached":true,"canAccessOpener":false,"browserContextId":"B2E532FBA291C0B83F5F601898C85072"},"waitingForDebugger":false}}
2022-08-12T09:37:39.101Z pw:protocol SEND ► {"id":3,"method":"Page.enable","sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.101Z pw:protocol SEND ► {"id":4,"method":"Page.getFrameTree","sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.101Z pw:protocol SEND ► {"id":5,"method":"Log.enable","params":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.102Z pw:protocol SEND ► {"id":6,"method":"Page.setLifecycleEventsEnabled","params":{"enabled":true},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.102Z pw:protocol SEND ► {"id":7,"method":"Runtime.enable","params":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.102Z pw:protocol SEND ► {"id":8,"method":"Page.addScriptToEvaluateOnNewDocument","params":{"source":"","worldName":"__playwright_utility_world__"},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.102Z pw:protocol SEND ► {"id":9,"method":"Network.enable","sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.103Z pw:protocol SEND ► {"id":10,"method":"Target.setAutoAttach","params":{"autoAttach":true,"waitForDebuggerOnStart":true,"flatten":true},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.103Z pw:protocol SEND ► {"id":11,"method":"Emulation.setFocusEmulationEnabled","params":{"enabled":true},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.105Z pw:protocol SEND ► {"id":12,"method":"Emulation.setEmulatedMedia","params":{"media":"","features":[{"name":"prefers-color-scheme","value":"light"},{"name":"prefers-reduced-motion","value":"no-preference"},{"name":"forced-colors","value":"none"}]},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.105Z pw:protocol SEND ► {"id":13,"method":"Runtime.runIfWaitingForDebugger","sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.105Z pw:protocol ◀ RECV {"id":2,"result":{}}
2022-08-12T09:37:39.106Z pw:protocol SEND ► {"id":14,"method":"Target.getTargetInfo"}
2022-08-12T09:37:39.107Z pw:protocol ◀ RECV {"id":14,"result":{"targetInfo":{"targetId":"b5477fab-f80f-4d95-a04c-a1aba014f4ad","type":"browser","title":"","url":"","attached":true,"canAccessOpener":false}}}
2022-08-12T09:37:39.108Z pw:protocol ◀ RECV {"method":"Network.requestWillBeSentExtraInfo","params":{"requestId":"58356E2400F99AEBEA158F37A1D7EAD9","associatedCookies":[],"headers":{},"connectTiming":{"requestTime":18976.467429}},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.109Z pw:protocol ◀ RECV {"method":"Network.responseReceived","params":{"requestId":"58356E2400F99AEBEA158F37A1D7EAD9","loaderId":"58356E2400F99AEBEA158F37A1D7EAD9","timestamp":18976.489348,"type":"Document","response":{"url":"http://example.com/","status":200,"statusText":"OK","headers":{"Accept-Ranges":"bytes","Age":"455675","Cache-Control":"max-age=604800","Content-Encoding":"gzip","Content-Length":"648","Content-Type":"text/html; charset=UTF-8","Date":"Fri, 12 Aug 2022 09:30:01 GMT","Etag":"\"3147526947+ident\"","Expires":"Fri, 19 Aug 2022 09:30:01 GMT","Last-Modified":"Thu, 17 Oct 2019 07:18:26 GMT","Server":"ECS (bsa/EB23)","Vary":"Accept-Encoding","X-Cache":"HIT"},"mimeType":"text/html","connectionReused":false,"connectionId":0,"remoteIPAddress":"93.184.216.34","remotePort":80,"fromDiskCache":true,"fromServiceWorker":false,"fromPrefetchCache":false,"encodedDataLength":0,"timing":{"requestTime":18976.467429,"proxyStart":-1,"proxyEnd":-1,"dnsStart":-1,"dnsEnd":-1,"connectStart":-1,"connectEnd":-1,"sslStart":-1,"sslEnd":-1,"workerStart":-1,"workerReady":-1,"workerFetchStart":-1,"workerRespondWithSettled":-1,"sendStart":20.273,"sendEnd":20.273,"pushStart":0,"pushEnd":0,"receiveHeadersEnd":20.938},"responseTime":1660296601119.568,"protocol":"http/1.1","securityState":"insecure"},"hasExtraInfo":true,"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7"},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.115Z pw:protocol ◀ RECV {"method":"Network.responseReceivedExtraInfo","params":{"requestId":"58356E2400F99AEBEA158F37A1D7EAD9","blockedCookies":[],"headers":{"Accept-Ranges":"bytes","Age":"455675","Cache-Control":"max-age=604800","Content-Encoding":"gzip","Content-Length":"648","Content-Type":"text/html; charset=UTF-8","Date":"Fri, 12 Aug 2022 09:30:01 GMT","Etag":"\"3147526947+ident\"","Expires":"Fri, 19 Aug 2022 09:30:01 GMT","Last-Modified":"Thu, 17 Oct 2019 07:18:26 GMT","Server":"ECS (bsa/EB23)","Vary":"Accept-Encoding","X-Cache":"HIT"},"resourceIPAddressSpace":"Public","statusCode":200,"headersText":"HTTP/1.1 200 OK\r\nContent-Encoding: gzip\r\nAccept-Ranges: bytes\r\nAge: 455675\r\nCache-Control: max-age=604800\r\nContent-Type: text/html; charset=UTF-8\r\nDate: Fri, 12 Aug 2022 09:30:01 GMT\r\nEtag: \"3147526947+ident\"\r\nExpires: Fri, 19 Aug 2022 09:30:01 GMT\r\nLast-Modified: Thu, 17 Oct 2019 07:18:26 GMT\r\nServer: ECS (bsa/EB23)\r\nVary: Accept-Encoding\r\nX-Cache: HIT\r\nContent-Length: 648\r\n\r\n"},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.226Z pw:protocol ◀ RECV {"id":3,"result":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.227Z pw:protocol ◀ RECV {"id":4,"result":{"frameTree":{"frame":{"id":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"C1641E1FB5341623AF23D4AF2F521F06","url":":","domainAndRegistry":"","securityOrigin":"://","mimeType":"text/html","adFrameStatus":{"adFrameType":"none"},"secureContextType":"InsecureScheme","crossOriginIsolatedContextType":"NotIsolated","gatedAPIFeatures":[]}}},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.229Z pw:protocol SEND ► {"id":15,"method":"Page.createIsolatedWorld","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7","grantUniveralAccess":true,"worldName":"__playwright_utility_world__"},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.230Z pw:protocol ◀ RECV {"id":5,"result":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.230Z pw:protocol ◀ RECV {"method":"Page.lifecycleEvent","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"C1641E1FB5341623AF23D4AF2F521F06","name":"commit","timestamp":18976.601914},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.230Z pw:protocol ◀ RECV {"method":"Page.lifecycleEvent","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"C1641E1FB5341623AF23D4AF2F521F06","name":"DOMContentLoaded","timestamp":18976.602171},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.230Z pw:protocol ◀ RECV {"method":"Page.lifecycleEvent","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"C1641E1FB5341623AF23D4AF2F521F06","name":"networkAlmostIdle","timestamp":18976.602236},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.230Z pw:protocol ◀ RECV {"method":"Page.lifecycleEvent","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"C1641E1FB5341623AF23D4AF2F521F06","name":"networkIdle","timestamp":18976.602236},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.230Z pw:protocol ◀ RECV {"id":6,"result":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.264Z pw:protocol ◀ RECV {"method":"Runtime.executionContextCreated","params":{"context":{"id":2,"origin":"://","name":"Electron Isolated Context","uniqueId":"2293232327287668401.-5394681030480107984","auxData":{"isDefault":false,"type":"isolated","frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7"}}},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.265Z pw:protocol ◀ RECV {"method":"Runtime.executionContextCreated","params":{"context":{"id":1,"origin":"://","name":"","uniqueId":"-7107706972392291305.-8894093656013288469","auxData":{"isDefault":true,"type":"default","frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7"}}},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.265Z pw:protocol ◀ RECV {"id":7,"result":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.266Z pw:protocol ◀ RECV {"id":8,"result":{"identifier":"1"},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.266Z pw:protocol ◀ RECV {"id":9,"result":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.266Z pw:protocol ◀ RECV {"id":10,"result":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.267Z pw:protocol ◀ RECV {"id":11,"result":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.267Z pw:protocol ◀ RECV {"id":12,"result":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.267Z pw:protocol ◀ RECV {"id":13,"result":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.267Z pw:protocol ◀ RECV {"method":"Page.frameStartedLoading","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7"},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.267Z pw:protocol ◀ RECV {"method":"Page.lifecycleEvent","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"58356E2400F99AEBEA158F37A1D7EAD9","name":"init","timestamp":18976.644133},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.276Z pw:protocol ◀ RECV {"method":"Runtime.executionContextsCleared","params":{},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.276Z pw:protocol ◀ RECV {"method":"Page.frameNavigated","params":{"frame":{"id":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"58356E2400F99AEBEA158F37A1D7EAD9","url":"http://example.com/","domainAndRegistry":"example.com","securityOrigin":"http://example.com","mimeType":"text/html","adFrameStatus":{"adFrameType":"none"},"secureContextType":"InsecureScheme","crossOriginIsolatedContextType":"NotIsolated","gatedAPIFeatures":[]},"type":"Navigation"},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.277Z pw:protocol SEND ► {"id":1,"method":"Runtime.enable","params":{}}
2022-08-12T09:37:39.280Z pw:protocol ◀ RECV {"method":"Network.dataReceived","params":{"requestId":"58356E2400F99AEBEA158F37A1D7EAD9","timestamp":18976.645752,"dataLength":1256,"encodedDataLength":0},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.280Z pw:protocol ◀ RECV {"method":"Runtime.executionContextCreated","params":{"context":{"id":3,"origin":"http://example.com","name":"","uniqueId":"-292231099321966650.-4032680593414985748","auxData":{"isDefault":true,"type":"default","frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7"}}},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.280Z pw:protocol ◀ RECV {"method":"Runtime.executionContextCreated","params":{"context":{"id":4,"origin":"http://example.com","name":"Electron Isolated Context","uniqueId":"2684366127228944207.4112437903329061045","auxData":{"isDefault":false,"type":"isolated","frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7"}}},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.280Z pw:protocol ◀ RECV {"method":"Runtime.executionContextCreated","params":{"context":{"id":5,"origin":"","name":"__playwright_utility_world__","uniqueId":"7884992162993240764.-8234749431107848877","auxData":{"isDefault":false,"type":"isolated","frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7"}}},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.287Z pw:protocol ◀ RECV {"id":15,"result":{"executionContextId":5},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.287Z pw:protocol ◀ RECV {"method":"Network.loadingFinished","params":{"requestId":"58356E2400F99AEBEA158F37A1D7EAD9","timestamp":18976.488946,"encodedDataLength":0,"shouldReportCorbBlocking":false},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.287Z pw:protocol ◀ RECV {"method":"Runtime.executionContextCreated","params":{"context":{"id":1,"origin":"","name":"/Users/max/development/tmp/electron-quick-start/node_modules/electron/dist/Electron.app/Contents/MacOS/Electron[57094]","uniqueId":"-5124061668684763188.397712347005300280","auxData":{"isDefault":true}}}}
2022-08-12T09:37:39.290Z pw:protocol ◀ RECV {"id":1,"result":{}}
2022-08-12T09:37:39.292Z pw:protocol ◀ RECV {"method":"Page.domContentEventFired","params":{"timestamp":18976.661163},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.292Z pw:protocol ◀ RECV {"method":"Page.lifecycleEvent","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"58356E2400F99AEBEA158F37A1D7EAD9","name":"DOMContentLoaded","timestamp":18976.661163},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.292Z pw:protocol ◀ RECV {"method":"Page.loadEventFired","params":{"timestamp":18976.661573},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.293Z pw:protocol ◀ RECV {"method":"Page.lifecycleEvent","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"58356E2400F99AEBEA158F37A1D7EAD9","name":"load","timestamp":18976.661573},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.294Z pw:protocol ◀ RECV {"id":2,"result":{"result":{"type":"object","className":"UtilityScript","description":"UtilityScript","objectId":"4132172588839380384.1.1"}}}
2022-08-12T09:37:39.295Z pw:protocol SEND ► {"id":3,"method":"Runtime.callFunctionOn","params":{"functionDeclaration":"(utilityScript, ...args) => utilityScript.evaluate(...args)","objectId":"4132172588839380384.1.1","arguments":[{"objectId":"4132172588839380384.1.1"},{"value":false},{"value":false},{"value":"process.mainModule.require('electron')"},{"value":0}],"returnByValue":false,"awaitPromise":true,"userGesture":true}}
2022-08-12T09:37:39.311Z pw:protocol ◀ RECV {"id":3,"result":{"result":{"type":"object","className":"Object","description":"Object","objectId":"4132172588839380384.1.2"}}}
2022-08-12T09:37:39.321Z pw:protocol SEND ► {"id":4,"method":"Runtime.callFunctionOn","params":{"functionDeclaration":"(utilityScript, ...args) => utilityScript.evaluate(...args)","objectId":"4132172588839380384.1.1","arguments":[{"objectId":"4132172588839380384.1.1"},{"value":true},{"value":true},{"value":"async ({ app }) => {\n    // This runs in the main Electron process, parameter here is always\n    // the result of the require('electron') in the main app script.\n    return app.getAppPath();\n  }"},{"value":2},{"value":{"h":0}},{"value":{"v":"undefined"}},{"objectId":"4132172588839380384.1.2"}],"returnByValue":true,"awaitPromise":true,"userGesture":true}}
2022-08-12T09:37:39.322Z pw:protocol ◀ RECV {"id":4,"result":{"result":{"type":"string","value":"/Users/max/development/tmp/electron-quick-start"}}}
/Users/max/development/tmp/electron-quick-start
2022-08-12T09:37:39.325Z pw:protocol SEND ► {"id":16,"method":"Runtime.evaluate","params":{"expression":"\n      (() => {\n        const module = {};\n        \"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// packages/playwright-core/src/server/injected/utilityScript.ts\nvar utilityScript_exports = {};\n__export(utilityScript_exports, {\n  UtilityScript: () => UtilityScript\n});\nmodule.exports = __toCommonJS(utilityScript_exports);\n\n// packages/playwright-core/src/server/isomorphic/utilityScriptSerializers.ts\nfunction source() {\n  function isRegExp(obj) {\n    return obj instanceof RegExp || Object.prototype.toString.call(obj) === \"[object RegExp]\";\n  }\n  function isDate(obj) {\n    return obj instanceof Date || Object.prototype.toString.call(obj) === \"[object Date]\";\n  }\n  function isURL(obj) {\n    return obj instanceof URL || Object.prototype.toString.call(obj) === \"[object URL]\";\n  }\n  function isError(obj) {\n    try {\n      return obj instanceof Error || obj && obj.__proto__ && obj.__proto__.name === \"Error\";\n    } catch (error) {\n      return false;\n    }\n  }\n  function parseEvaluationResultValue2(value, handles = [], refs = /* @__PURE__ */ new Map()) {\n    if (Object.is(value, void 0))\n      return void 0;\n    if (typeof value === \"object\" && value) {\n      if (\"ref\" in value)\n        return refs.get(value.ref);\n      if (\"v\" in value) {\n        if (value.v === \"undefined\")\n          return void 0;\n        if (value.v === \"null\")\n          return null;\n        if (value.v === \"NaN\")\n          return NaN;\n        if (value.v === \"Infinity\")\n          return Infinity;\n        if (value.v === \"-Infinity\")\n          return -Infinity;\n        if (value.v === \"-0\")\n          return -0;\n        return void 0;\n      }\n      if (\"d\" in value)\n        return new Date(value.d);\n      if (\"u\" in value)\n        return new URL(value.u);\n      if (\"r\" in value)\n        return new RegExp(value.r.p, value.r.f);\n      if (\"a\" in value) {\n        const result2 = [];\n        refs.set(value.id, result2);\n        for (const a of value.a)\n          result2.push(parseEvaluationResultValue2(a, handles, refs));\n        return result2;\n      }\n      if (\"o\" in value) {\n        const result2 = {};\n        refs.set(value.id, result2);\n        for (const { k, v } of value.o)\n          result2[k] = parseEvaluationResultValue2(v, handles, refs);\n        return result2;\n      }\n      if (\"h\" in value)\n        return handles[value.h];\n    }\n    return value;\n  }\n  function serializeAsCallArgument2(value, handleSerializer) {\n    return serialize(value, handleSerializer, { visited: /* @__PURE__ */ new Map(), lastId: 0 });\n  }\n  function serialize(value, handleSerializer, visitorInfo) {\n    if (value && typeof value === \"object\") {\n      if (globalThis.Window && value instanceof globalThis.Window)\n        return \"ref: <Window>\";\n      if (globalThis.Document && value instanceof globalThis.Document)\n        return \"ref: <Document>\";\n      if (globalThis.Node && value instanceof globalThis.Node)\n        return \"ref: <Node>\";\n    }\n    return innerSerialize(value, handleSerializer, visitorInfo);\n  }\n  function innerSerialize(value, handleSerializer, visitorInfo) {\n    const result2 = handleSerializer(value);\n    if (\"fallThrough\" in result2)\n      value = result2.fallThrough;\n    else\n      return result2;\n    if (typeof value === \"symbol\")\n      return { v: \"undefined\" };\n    if (Object.is(value, void 0))\n      return { v: \"undefined\" };\n    if (Object.is(value, null))\n      return { v: \"null\" };\n    if (Object.is(value, NaN))\n      return { v: \"NaN\" };\n    if (Object.is(value, Infinity))\n      return { v: \"Infinity\" };\n    if (Object.is(value, -Infinity))\n      return { v: \"-Infinity\" };\n    if (Object.is(value, -0))\n      return { v: \"-0\" };\n    if (typeof value === \"boolean\")\n      return value;\n    if (typeof value === \"number\")\n      return value;\n    if (typeof value === \"string\")\n      return value;\n    if (isError(value)) {\n      const error = value;\n      if (\"captureStackTrace\" in globalThis.Error) {\n        return error.stack || \"\";\n      }\n      return `${error.name}: ${error.message}\n${error.stack}`;\n    }\n    if (isDate(value))\n      return { d: value.toJSON() };\n    if (isURL(value))\n      return { u: value.toJSON() };\n    if (isRegExp(value))\n      return { r: { p: value.source, f: value.flags } };\n    const id = visitorInfo.visited.get(value);\n    if (id)\n      return { ref: id };\n    if (Array.isArray(value)) {\n      const a = [];\n      const id2 = ++visitorInfo.lastId;\n      visitorInfo.visited.set(value, id2);\n      for (let i = 0; i < value.length; ++i)\n        a.push(serialize(value[i], handleSerializer, visitorInfo));\n      return { a, id: id2 };\n    }\n    if (typeof value === \"object\") {\n      const o = [];\n      const id2 = ++visitorInfo.lastId;\n      visitorInfo.visited.set(value, id2);\n      for (const name of Object.keys(value)) {\n        let item;\n        try {\n          item = value[name];\n        } catch (e) {\n          continue;\n        }\n        if (name === \"toJSON\" && typeof item === \"function\")\n          o.push({ k: name, v: { o: [], id: 0 } });\n        else\n          o.push({ k: name, v: serialize(item, handleSerializer, visitorInfo) });\n      }\n      if (o.length === 0 && value.toJSON && typeof value.toJSON === \"function\")\n        return innerSerialize(value.toJSON(), handleSerializer, visitorInfo);\n      return { o, id: id2 };\n    }\n  }\n  return { parseEvaluationResultValue: parseEvaluationResultValue2, serializeAsCallArgument: serializeAsCallArgument2 };\n}\nvar result = source();\nvar parseEvaluationResultValue = result.parseEvaluationResultValue;\nvar serializeAsCallArgument = result.serializeAsCallArgument;\n\n// packages/playwright-core/src/server/injected/utilityScript.ts\nvar UtilityScript = class {\n  evaluate(isFunction, returnByValue, expression, argCount, ...argsAndHandles) {\n    const args = argsAndHandles.slice(0, argCount);\n    const handles = argsAndHandles.slice(argCount);\n    const parameters = args.map((a) => parseEvaluationResultValue(a, handles));\n    let result2 = globalThis.eval(expression);\n    if (isFunction === true) {\n      result2 = result2(...parameters);\n    } else if (isFunction === false) {\n      result2 = result2;\n    } else {\n      if (typeof result2 === \"function\")\n        result2 = result2(...parameters);\n    }\n    return returnByValue ? this._promiseAwareJsonValueNoThrow(result2) : result2;\n  }\n  jsonValue(returnByValue, value) {\n    if (Object.is(value, void 0))\n      return void 0;\n    return serializeAsCallArgument(value, (value2) => ({ fallThrough: value2 }));\n  }\n  _promiseAwareJsonValueNoThrow(value) {\n    const safeJson = (value2) => {\n      try {\n        return this.jsonValue(true, value2);\n      } catch (e) {\n        return void 0;\n      }\n    };\n    if (value && typeof value === \"object\" && typeof value.then === \"function\") {\n      return (async () => {\n        const promiseValue = await value;\n        return safeJson(promiseValue);\n      })();\n    }\n    return safeJson(value);\n  }\n};\nmodule.exports = UtilityScript;\n\n        return new module.exports();\n      })();","contextId":5},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.331Z pw:protocol ◀ RECV {"method":"Page.frameStoppedLoading","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7"},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.335Z pw:protocol ◀ RECV {"method":"Page.lifecycleEvent","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"58356E2400F99AEBEA158F37A1D7EAD9","name":"firstPaint","timestamp":18976.715169},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.335Z pw:protocol ◀ RECV {"method":"Page.lifecycleEvent","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"58356E2400F99AEBEA158F37A1D7EAD9","name":"firstContentfulPaint","timestamp":18976.715309},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.336Z pw:protocol ◀ RECV {"method":"Page.lifecycleEvent","params":{"frameId":"640C8BA9D94C3EFD1211FEEC537D5DD7","loaderId":"58356E2400F99AEBEA158F37A1D7EAD9","name":"firstMeaningfulPaintCandidate","timestamp":18976.715419},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.336Z pw:protocol ◀ RECV {"method":"Runtime.consoleAPICalled","params":{"type":"warning","args":[{"type":"string","value":"%cElectron Security Warning (Insecure Content-Security-Policy)"},{"type":"string","value":"font-weight: bold;"},{"type":"string","value":"This renderer process has either no Content Security\n  Policy set or a policy with \"unsafe-eval\" enabled. This exposes users of\n  this app to unnecessary security risks.\n\nFor more information and help, consult\nhttps://electronjs.org/docs/tutorial/security.\nThis warning will not show up\nonce the app is packaged."}],"executionContextId":4,"timestamp":1660297059335.939,"stackTrace":{"callFrames":[{"functionName":"warnAboutInsecureCSP","scriptId":"8","url":"node:electron/js2c/sandbox_bundle","lineNumber":52,"columnNumber":1328},{"functionName":"logSecurityWarnings","scriptId":"8","url":"node:electron/js2c/sandbox_bundle","lineNumber":52,"columnNumber":3511},{"functionName":"","scriptId":"8","url":"node:electron/js2c/sandbox_bundle","lineNumber":52,"columnNumber":4718}]}},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.338Z pw:protocol ◀ RECV {"id":16,"result":{"result":{"type":"object","className":"UtilityScript","description":"UtilityScript","objectId":"-4346237968120878426.5.1"}},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.339Z pw:protocol SEND ► {"id":17,"method":"Runtime.callFunctionOn","params":{"functionDeclaration":"(utilityScript, ...args) => utilityScript.evaluate(...args)","objectId":"-4346237968120878426.5.1","arguments":[{"objectId":"-4346237968120878426.5.1"},{"value":true},{"value":true},{"value":"() => document.title"},{"value":1},{"value":{"v":"undefined"}}],"returnByValue":true,"awaitPromise":true,"userGesture":true},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
2022-08-12T09:37:39.340Z pw:protocol ◀ RECV {"id":17,"result":{"result":{"type":"string","value":"Example Domain"}},"sessionId":"DC849781DCC3B5B4BA221303141538D1"}
Title: Example Domain
2022-08-12T09:37:39.341Z pw:protocol SEND ► {"id":5,"method":"Runtime.callFunctionOn","params":{"functionDeclaration":"(utilityScript, ...args) => utilityScript.evaluate(...args)","objectId":"4132172588839380384.1.1","arguments":[{"objectId":"4132172588839380384.1.1"},{"value":true},{"value":true},{"value":"({\n        app\n      }) => app.quit()"},{"value":2},{"value":{"h":0}},{"value":{"v":"undefined"}},{"objectId":"4132172588839380384.1.2"}],"returnByValue":true,"awaitPromise":true,"userGesture":true}}
2022-08-12T09:37:39.443Z pw:protocol ◀ RECV {"id":5,"result":{"result":{"type":"undefined"}}}
2022-08-12T09:37:39.445Z pw:protocol ◀ RECV {"method":"Target.detachedFromTarget","params":{"sessionId":"DC849781DCC3B5B4BA221303141538D1","targetId":"640C8BA9D94C3EFD1211FEEC537D5DD7"}}
